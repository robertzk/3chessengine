// Generated by CoffeeScript 1.7.1
(function() {
  var Board, Piece, should;

  should = require('chai').should();

  Piece = require('../../../engine/pieces/piece');

  Board = require('../../../engine/board');

  describe('Piece', function() {
    it("should throw an error when no piece color is provided", function() {
      var error;
      try {
        return new Piece({});
      } catch (_error) {
        error = _error;
        return error.toString().should.equal("Please provide a piece color");
      }
    });
    it("should throw an error when incorrect piece color is provided", function() {
      var error;
      try {
        return new Piece({
          color: 'purple'
        });
      } catch (_error) {
        error = _error;
        return error.toString().should.equal("Piece color must be one of white, black, grey");
      }
    });
    it("should throw an error when no board is assigned", function() {
      var error;
      try {
        return new Piece({
          color: 'white'
        });
      } catch (_error) {
        error = _error;
        return error.toString().should.equal("Please provide a board");
      }
    });
    it("should throw an error when a non-Board is assigned", function() {
      var error;
      try {
        return new Piece({
          color: 'white',
          board: void 0
        });
      } catch (_error) {
        error = _error;
        return error.toString().should.equal("Specified 'board' is not a Board");
      }
    });
    return it("should be able to create a Piece when a valid color and board are provided", function() {
      return new Piece({
        color: 'white',
        board: new Board()
      });
    });
  });

}).call(this);
